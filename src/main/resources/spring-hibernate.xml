<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
                            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
        <!--配置 -->
        <bean id="placeholderConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
            <property name="location">
                <value>classpath:/jdbc.properties</value>
            </property>
        </bean>
        <!--配置数据源-->
        <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
            <property name="driverClassName" value="${jdbc.driver}"/>
            <property name="url" value="${jdbc.url}"/>
            <property name="username" value="${jdbc.username}"/>
            <property name="password" value="${jdbc.password}"/>

            <!--配置初始化大小，最大，最小-->
            <property name="initialSize" value="${jdbc.pool.initialSize}"/>
            <property name="minIdle" value="${jdbc.pool.minIdle}"/>
            <property name="maxActive" value="${jdbc.pool.maxActive}"/>
        </bean>
        <!-- 配置hibernate的SessionFactory -->
        <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
            <property name="dataSource" ref="dataSource"/>
            <property name="hibernateProperties" >
                <props>
                    <!--数据库方言-->
                    <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
                    <!--显示sql-->
                    <prop key="hibernate.show_sql">true</prop>
                    <!--格式化sql-->
                    <prop key="hibernate.format_sql">true</prop>
                    <prop key="hibernate.hbm2ddl.auto">update</prop>
                </props>
            </property>
            <!-- 扫描hibernate注解配置的entity -->
            <property name="packagesToScan" value="com.main" />
        </bean>
        <!-- 配置事务管理器 -->
        <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
            <property name="sessionFactory" ref="sessionFactory"></property>
        </bean>
        <!-- 配置事务增强处理Bean，指定事务管理器 -->
        <tx:advice id="transactionInterceptor" transaction-manager="transactionManager">
            <!-- 配置详细事务处理语义 -->
            <tx:attributes>
                <tx:method name="save*"  propagation="REQUIRED"/>
                <tx:method name="update*" propagation="REQUIRED"/>
                <tx:method name="delete*" propagation="REQUIRED"/>
                <tx:method name="get*" propagation="SUPPORTS" read-only="true" />
                <tx:method name="find*" propagation="SUPPORTS" read-only="true" />
                <tx:method name="select*" propagation="SUPPORTS" read-only="true" />
                <tx:method name="load*" propagation="SUPPORTS" read-only="true" />
                <tx:method name="*"/>
            </tx:attributes>
        </tx:advice>
        <!-- Spring aop事务管理
        <aop:config>-->
            <!-- 配置切入点
            <aop:pointcut id="transactionPointcut" expression="execution(* com.main.*.*.service.*.*(..))"/>-->
            <!-- 指定在txAdvice切入点应用txAdvice事务增强处理
            <aop:advisor pointcut-ref="transactionPointcut" advice-ref="transactionInterceptor"/>
        </aop:config>-->
</beans>